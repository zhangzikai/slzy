/*
 * File: app.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

// @require @packageOverrides
Ext.Loader.setConfig({
    enabled: true
});

Ext.application({
    appFolder:hostPath+'/v6/App',
    name: 'MyApp',
    controllers:['MainController'],

    launch: function() {
    	Ext.Ajax.timeout = 1800000;
        Ext.create('MyApp.view.MyViewport');
    }
});


//由高斯投影坐标反算成经纬度
function GaussToBL2(x,y, type)
{
	var ProjNo; var ZoneWide; ////带宽
	var longitude1,latitude1, longitude0,latitude0, X0,Y0, xval,yval;
	var e1,e2,f,a, ee, NN, T,C, M, D,R,u,fai, iPI;
	iPI = 0.0174532925199433; ////3.1415926535898/180.0;
	//a = 6378245.0; f = 1.0/298.3; //54年北京坐标系参数
	a=6378140.0; f=1/298.257; //80年西安坐标系参数
	if(type==0) {
		ZoneWide = 3; ////3度带宽
	} else {
		ZoneWide = 6; ////6度带宽
	}

	ProjNo = Math.floor(y/1000000) ; //查找带号
	longitude0 = (ProjNo-1) * ZoneWide + ZoneWide / 2;

	longitude0 = longitude0 * iPI ; //中央经线
	X0 = ProjNo*1000000+500000;
	Y0 = 0;
	xval = y-X0; yval = x-Y0; //带内大地坐标
	e2 = 2*f-f*f;
	e1 = (1.0-Math.sqrt(1-e2))/(1.0+Math.sqrt(1-e2));
	ee = e2/(1-e2);
	M = yval;
	u = M/(a*(1-e2/4-3*e2*e2/64-5*e2*e2*e2/256));
	fai = u+(3*e1/2-27*e1*e1*e1/32)*Math.sin(2*u)+(21*e1*e1/16-55*e1*e1*e1*e1/32)*Math.sin(
	4*u)
	+(151*e1*e1*e1/96)*Math.sin(6*u)+(1097*e1*e1*e1*e1/512)*Math.sin(8*u);
	C = ee*Math.cos(fai)*Math.cos(fai);
	T = Math.tan(fai)*Math.tan(fai);
	NN = a/Math.sqrt(1.0-e2*Math.sin(fai)*Math.sin(fai));
	R = a*(1-e2)/Math.sqrt((1-e2*Math.sin(fai)*Math.sin(fai))*(1-e2*Math.sin(fai)*Math.sin(fai))*(1-e2*Math.sin
	(fai)*Math.sin(fai)));
	D = xval/NN;
	//计算经度(Longitude) 纬度(Latitude)
	longitude1 = longitude0+(D-(1+2*T+C)*D*D*D/6+(5-2*C+28*T-3*C*C+8*ee+24*T*T)*D
	*D*D*D*D/120)/Math.cos(fai);
	latitude1 = fai -(NN*Math.tan(fai)/R)*(D*D/2-(5+3*T+10*C-4*C*C-9*ee)*D*D*D*D/24
	+(61+90*T+298*C+45*T*T-256*ee-3*C*C)*D*D*D*D*D*D/720);
	//转换为度 DD
	var result = new Object();
	if(type==0) {
		//return new XPoint(longitude1 / iPI + 1.5,latitude1 / iPI);
		result.lon = longitude1 / iPI + 1.5;
		result.lat = latitude1 / iPI;
	} else {
		//return new XPoint(longitude1 / iPI,latitude1 / iPI);
		result.lon = longitude1 / iPI;
		result.lat = latitude1 / iPI;
	}
	return result;
}